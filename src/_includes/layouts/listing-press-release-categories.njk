---js
{
  layout: 'base',
  title: 'Category',
  pagination: {
    size: 1,
    alias: 'tag',
    before: function(data) {
      // array tag suffixes
      const filterSuffix = ['press-release', 'article'];

      // single array of all tags in lowercase
      const allTags = data
        .map(item => {
          const { tags = [] } = item.data;
          return tags;
        })
        .reduce((collectedTags, tags) => {
          return [...collectedTags, ...tags];
        }, [])
        .map(tag => tag.toLowerCase())
        .filter(tag => {
          return !filterSuffix.some(suffix => tag.endsWith(suffix))
        });

      // remove duplicate tags
      const uniqueTags = [...new Set(allTags)];

      // sort alphabetically
      const tagsSorted = uniqueTags.sort((a, b) => {
        return a.localeCompare(b);
      });

      return tagsSorted;
    }
  },
  permalink: '/{{ locale }}/news/press-releases/category/{{ tag | slug }}/'
}
---

{% set pressReleaseLocaleTag = locale + '-press-release' %}
{% set articleLocaleTag = locale + '-article' %}
{% set pressReleaseFilters = collections[pressReleaseLocaleTag] | collectionTags([pressReleaseLocaleTag, articleLocaleTag]) %}
{% set pressReleaseCategories = collections[tag] | collectionIncludesTag(pressReleaseLocaleTag) | reverse %}

{% include 'components/navigation-secondary.njk' %}

<h1>{{ title }} "{{ tag }}"</h1>

<select class="select" id="filters" onchange="javascript:location.href = this.value;">
  <option value="">Category</option>
  {% for item in pressReleaseFilters %}
    {% set itemSlug = item | slug + '/'%}
    <option {% if page.url | endsWith(itemSlug) %}selected{% endif %} value="/{{ locale }}/news/press-releases/category/{{ itemSlug }}">
      {{ item }}
    </option>
  {% endfor %}
</select>

<ul class="ul grid grid--cols-4">
  {% for item in pressReleaseCategories %}
    <li>
      {% include "components/press-release-card.njk" %}
    </li>
  {% endfor %}
</ul>